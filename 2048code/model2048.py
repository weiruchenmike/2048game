class Game_model:
	# 左移一行數字,如果有數據移動則返回True，否則返回False:
    # 如: line = [0, 2, 0, 2] 即表達如下一行:
    #     +---+---+---+---+
    #     | 0 | 2 | 0 | 2 | <----向左移動
    #     +---+---+---+---+
    # 此行數據需要左移三次:
    #   第一次左移結果:
    #     +---+---+---+---+
    #     | 2 | 0 | 2 | 0 |
    #     +---+---+---+---+
    #   第二次左移結果:
    #     +---+---+---+---+
    #     | 2 | 2 | 0 | 0 |
    #     +---+---+---+---+
    #   第三次左移結果:
    #     +---+---+---+---+
    #     | 2 | 2 | 0 | 0 | # 因為最左則為2,所以右側2不動
    #     +---+---+---+---+
    # 最終結果: line = [2, 2, 0, 0]
	def _left_move_number(self,line):
		moveflag = False # 是否移動的標識,先假設沒有移動
		for j in range(3): # 重複執行下面算法三次
			for i in range(3): # i為索引
				if 0 == line[i]: # 此處有空位，右側相鄰數字向左側移動，右側填空白
					moveflag = True
					line[i] = line[i + 1]
					line[i + 1] = 0
		
		return moveflag
#######################################################################################	
	'''向左側進行相同單元格合併,合併結果放在左側,右側補零
    如: line = [2, 2, 4, 4] 即表達如下一行:
        +---+---+---+---+
        | 2 | 2 | 4 | 4 |
        +---+---+---+---+
    全併後的結果為:
        +---+---+---+---+
        | 4 | 0 | 8 | 0 |
        +---+---+---+---+
    最終結果: line = [4, 0, 8, 0]
    '''	
	def _left_marge_number(self,line):
		moveflag = False
		for i in range(3):
			if line[i] == line[i + 1]:
				moveflag = True
				line[i] *= 2 # 左側翻倍
				line[i + 1] = 0 # 右側歸零
		return moveflag
###################################################################################
	# 左移一行數據,如果有數據移動則返回True，否則返回False:
    # 如: line = [2, 0, 2, 8] 即表達如下一行:
    #     +---+---+---+---+
    #     | 2 | | 0 | 2 | 8<----向左移動
    #     +---+---+---+---+
    # 左移算法分為三步:
    #     1. 將所有數字向左移動來填補左側空格,即:
    #         +---+---+---+---+
    #         | 2 | 2 | 8 | 0
    #         +---+---+---+---+
    #     2. 判斷是否發生碰幢，如果兩個相臨且相等的數值則說明有碰撞需要合併,
    #        合併結果靠左，右則填充空格
    #         +---+---+---+---+
    #         | 4 | 0 | 8 | 0 |
    #         +---+---+---+---+
    #     3. 再重複第一步，將所有數字向左移動來填補左側空格,即:
    #         +---+---+---+---+
    #         | 4 | 8 | 0 | 0 |
    #         +---+---+---+---+
    #     最終結果: line = [4, 8, 0, 0]	
	def _left_move_aline(self,line):    	
		moveflag = False
		if self._left_move_number(line):
			moveflag = True
		if self._left_marge_number(line):
			moveflag = True
		if self._left_move_number(line):
			moveflag = True
		return moveflag
	
if __name__=="__main__":
	v=Game_model()
	line=[2,0,4,8]
	print(v._left_move_number(line))
	print(v._left_marge_number(line))
	print(v._left_move_aline(line))
